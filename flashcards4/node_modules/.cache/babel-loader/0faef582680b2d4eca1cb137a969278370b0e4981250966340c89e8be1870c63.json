{"ast":null,"code":"var _jsxFileName = \"E:\\\\SWE\\\\flashcards\\\\src\\\\CardComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './CardStyle.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CardComponent = () => {\n  _s();\n  const [cards, setCards] = useState([]);\n  const [flipped, setFlipped] = useState([]);\n  const [currentPage, setCurrentPage] = useState(0);\n  const cardsPerPage = 3;\n  useEffect(() => {\n    axios.get('http://localhost:5000/cards').then(response => {\n      setCards(response.data);\n      setFlipped(new Array(response.data.length).fill(false));\n    }).catch(error => {\n      console.error('There was an error fetching the data!', error);\n    });\n  }, []);\n  const handleFlip = index => {\n    const newFlipped = [...flipped];\n    newFlipped[index] = !newFlipped[index];\n    setFlipped(newFlipped);\n  };\n  const handleNextPage = () => {\n    if ((currentPage + 1) * cardsPerPage < cards.length) {\n      setCurrentPage(currentPage + 1);\n    }\n  };\n  const handlePreviousPage = () => {\n    if (currentPage > 0) {\n      setCurrentPage(currentPage - 1);\n    }\n  };\n  const startIndex = currentPage * cardsPerPage;\n  const endIndex = startIndex + cardsPerPage;\n  const currentCards = cards.slice(startIndex, endIndex);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Home\", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-container\",\n      children: [currentCards.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `card ${flipped[startIndex + index] ? 'flipped' : ''}`,\n        onClick: () => handleFlip(startIndex + index),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-inner\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-front\",\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: card.Question\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-back\",\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: card.Answer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"pagination-button\",\n          onClick: handlePreviousPage,\n          disabled: currentPage === 0,\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"pagination-button\",\n          onClick: handleNextPage,\n          disabled: (currentPage + 1) * cardsPerPage >= cards.length,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(CardComponent, \"+FuihxR3xCzSgBMVoCjQR+DJdSA=\");\n_c = CardComponent;\nexport default CardComponent;\nvar _c;\n$RefreshReg$(_c, \"CardComponent\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","CardComponent","_s","cards","setCards","flipped","setFlipped","currentPage","setCurrentPage","cardsPerPage","get","then","response","data","Array","length","fill","catch","error","console","handleFlip","index","newFlipped","handleNextPage","handlePreviousPage","startIndex","endIndex","currentCards","slice","children","className","map","card","onClick","Question","fileName","_jsxFileName","lineNumber","columnNumber","Answer","id","disabled","_c","$RefreshReg$"],"sources":["E:/SWE/flashcards/src/CardComponent.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './CardStyle.css';\r\n\r\nconst CardComponent = () => {\r\n  const [cards, setCards] = useState([]);\r\n  const [flipped, setFlipped] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n  const cardsPerPage = 3;\r\n\r\n  useEffect(() => {\r\n    axios.get('http://localhost:5000/cards')\r\n      .then(response => {\r\n        setCards(response.data);\r\n        setFlipped(new Array(response.data.length).fill(false));\r\n      })\r\n      .catch(error => {\r\n        console.error('There was an error fetching the data!', error);\r\n      });\r\n  }, []);\r\n\r\n  const handleFlip = (index) => {\r\n    const newFlipped = [...flipped];\r\n    newFlipped[index] = !newFlipped[index];\r\n    setFlipped(newFlipped);\r\n  };\r\n\r\n  const handleNextPage = () => {\r\n    if ((currentPage + 1) * cardsPerPage < cards.length) {\r\n      setCurrentPage(currentPage + 1);\r\n    }\r\n  };\r\n\r\n  const handlePreviousPage = () => {\r\n    if (currentPage > 0) {\r\n      setCurrentPage(currentPage - 1);\r\n    }\r\n  };\r\n\r\n  const startIndex = currentPage * cardsPerPage;\r\n  const endIndex = startIndex + cardsPerPage;\r\n  const currentCards = cards.slice(startIndex, endIndex);\r\n\r\n  return (\r\n    <div>\r\n      Home\r\n    <div className=\"card-container\">\r\n      \r\n      {currentCards.map((card, index) => (\r\n        <div\r\n          key={card.id}\r\n          className={`card ${flipped[startIndex + index] ? 'flipped' : ''}`}\r\n          onClick={() => handleFlip(startIndex + index)}\r\n        >\r\n          <div className=\"card-inner\">\r\n            <div className=\"card-front\">\r\n              <h2>{card.Question}</h2>\r\n            </div>\r\n            <div className=\"card-back\">\r\n              <h2>{card.Answer}</h2>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n      <div className=\"pagination-controls\">\r\n        <button className=\"pagination-button\" onClick={handlePreviousPage} disabled={currentPage === 0}>\r\n          Previous\r\n        </button>\r\n        <button className=\"pagination-button\" onClick={handleNextPage} disabled={(currentPage + 1) * cardsPerPage >= cards.length}>\r\n          Next\r\n        </button>\r\n      </div>\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardComponent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}